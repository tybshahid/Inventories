// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Domain.Computer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<string>("Processor")
                        .HasColumnType("TEXT");

                    b.Property<int>("RamSlots")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsbPorts")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("Domain.Desktop", b =>
                {
                    b.HasBaseType("Domain.Computer");

                    b.Property<string>("FormFactor")
                        .HasColumnType("TEXT");

                    b.ToTable("Desktops");
                });

            modelBuilder.Entity("Domain.Laptop", b =>
                {
                    b.HasBaseType("Domain.Computer");

                    b.Property<int>("ScreenSize")
                        .HasColumnType("INTEGER");

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("Domain.Desktop", b =>
                {
                    b.HasOne("Domain.Computer", null)
                        .WithOne()
                        .HasForeignKey("Domain.Desktop", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Laptop", b =>
                {
                    b.HasOne("Domain.Computer", null)
                        .WithOne()
                        .HasForeignKey("Domain.Laptop", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
